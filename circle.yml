version: 2.1

executors:
  cy-doc:
    docker:
      - image: cypress/browsers:node13.8.0-chrome81-ff75
  node10:
    docker:
      - image: cypress/base:10.16.0
    environment:
      # allow post-install hooks
      npm_config_unsafe_perm: true
      TERM: xterm
  mac:
    macos:
      xcode: "10.1.0"
    environment:
      TERM: "xterm"
  win:
    # copied the parameters from
    # https://circleci.com/developer/orbs/orb/circleci/windows
    machine:
      image: "windows-server-2019-vs2019:stable"
      resource_class: "windows.medium"
      shell: "bash.exe"

commands:
  set-failed-status:
    description: |
      Sets commit status to failures if necessary
      for the original Test Runner commit.
    steps:
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  set-passed-status:
    description: |
      Sets commit status to success if necessary
      for the original Test Runner commit.
    steps:
      - run:
          when: on_success
          name: Set status check
          command: $(npm bin)/set-status --state success --description "on CircleCI"

  early-stop:
    description: |
      Early halt if this commit is for testing binaries for different platform
      Place this command AFTER checkout command because we need to look
      at the commit subject text
    parameters:
      substring:
        type: string
        description: String to search for in the commit subject to skip build
    steps:
      - run:
          name: Checking OS platform for "<< parameters.substring >>"
          command: |
            subject=$(git show -s --pretty=%s)
            echo "Commit subject: $subject"

            if [[ $subject == *"<< parameters.substring >>"* ]]; then
              echo Skipping testing binary ‚è≠
              echo Found string "<< parameters.substring >>"
              circleci step halt
            fi

  install-tools:
    steps:
      - run: npm install @cypress/commit-message-install@3

  load-cache:
    description: Loads saved node modules cache
    steps:
      - restore_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-

  save-cache:
    description: Saves the node modules cache
    steps:
      - save_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules

  setup:
    description: Installs tools after we verified that we should run this job
    steps:
      - load-cache
      - run: npm install
      - install-tools
      - save-cache

  prepare:
    description: Install dependencies and tools
    parameters:
      substring:
        type: string
        description: String to search for in the commit subject to skip build
        default: Testing new win32
    steps:
      - checkout
      - when:
          condition: << parameters.substring >>
          steps:
            - early-stop:
                substring: << parameters.substring >>
      - setup

  store-npm-logs:
    description: Save any NPM error logs as artifacts
    steps:
      - store_artifacts:
          path: ~/.npm/_logs

defaults: &defaults
  parallelism: 1
  working_directory: ~/app
  parameters:
    executor:
      type: executor
      default: cy-doc
  executor: <<parameters.executor>>

jobs:
  lint:
    <<: *defaults
    steps:
      - prepare
      - run: npm run lint

  kitchensink:
    <<: *defaults
    steps:
      - prepare
      - run:
          command: npm run test-if -- --repo cypress-example-kitchensink
          timeout: '3 minutes'
      - set-failed-status
        # store NPM logs in case there was a problem
      - store_artifacts:
          path: ~/.npm/_logs

  kitchensink-mac:
    executor: mac
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - early-stop:
          substring: Testing new linux
      - setup
      - run:
          command: npm run test-if -- --repo cypress-example-kitchensink
          timeout: '3 minutes'
      - set-failed-status
        # store NPM logs in case there was a problem
      - store_artifacts:
          path: ~/.npm/_logs

  kitchensink-windows:
    executor: win
    steps:
      - checkout
      - early-stop:
          substring: Testing new darwin
      - early-stop:
          substring: Testing new linux
      - setup
      - run:
          command: npm run test-if -- --repo cypress-example-kitchensink --command test:ci:record:windows
          timeout: '3 minutes'
      - set-failed-status
        # store NPM logs in case there was a problem
      - store_artifacts:
          path: ~/.npm/_logs

  kitchensink-windows-chrome:
    executor: win
    steps:
      - checkout
      - early-stop:
          substring: Testing new darwin
      - early-stop:
          substring: Testing new linux
      - setup
      # install Chrome browser on Windows machine using Chocolatey
      - run: choco install googlechrome
      - run:
          command: npm run test-if -- --repo cypress-example-kitchensink --command test:ci:record:windows:chrome
          timeout: '3 minutes'
      - set-failed-status
        # store NPM logs in case there was a problem
      - store_artifacts:
          path: ~/.npm/_logs

  kitchensink-chrome:
    <<: *defaults
    steps:
      - prepare
      - run:
          command: npm run test-if -- --repo cypress-example-kitchensink --command test:ci:chrome
          timeout: '3 minutes'
      - set-failed-status
        # store NPM logs in case there was a problem
      - store_artifacts:
          path: ~/.npm/_logs

  recipes:
    <<: *defaults
    parallelism: 20
    steps:
      - prepare
      # when running in parallel, the total number of parallel containers
      # is in variable CIRCLE_NODE_TOTAL and the current container index in CIRCLE_NODE_INDEX
      # which starts at 0 and goes to $CIRCLE_NODE_TOTAL - 1
      - run: npm run test-if -- --repo cypress-example-recipes --command test:ci --chunk $CIRCLE_NODE_INDEX --total-chunks $CIRCLE_NODE_TOTAL
      - set-failed-status
      - store_artifacts:
          # store NPM logs in case there was a problem
          path: ~/.npm/_logs

  recipes-chrome:
    <<: *defaults
    parallelism: 10
    steps:
      - prepare
      - run: npm run test-if -- --repo cypress-example-recipes --command test:ci:chrome --chunk $CIRCLE_NODE_INDEX --total-chunks $CIRCLE_NODE_TOTAL
      - set-failed-status
      - store_artifacts:
          # store NPM logs in case there was a problem
          path: ~/.npm/_logs

  todomvc:
    <<: *defaults
    steps:
      - prepare
      - run:
          command: npm run test-if -- --repo cypress-example-todomvc --command test:ci:record
          timeout: '3 minutes'
      - set-failed-status
      - store-npm-logs

  todomvc-mac:
    executor: mac
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - early-stop:
          substring: Testing new linux
      - setup
      - run:
          command: npm run test-if -- --repo cypress-example-todomvc --command test:ci:record
          timeout: '3 minutes'
      - set-failed-status
      - store-npm-logs

  todomvc-headed:
    <<: *defaults
    steps:
      - prepare
      - run:
          command: npm run test-if -- --repo cypress-example-todomvc --command test:ci:headed
          timeout: '3 minutes'
        # store NPM logs in case there was a problem
      - set-failed-status
      - store-npm-logs

  todomvc-chrome:
    <<: *defaults
    steps:
      - prepare
      - run:
          command: npm run test-if -- --repo cypress-example-todomvc --command test:ci:chrome
          timeout: '3 minutes'
        # store NPM logs in case there was a problem
      - set-failed-status
      - store-npm-logs

  # example repo with TodoMVC with full code coverage
  todomvc-redux:
    <<: *defaults
    steps:
      - prepare
      - run:
          command: npm run test-if -- --repo cypress-example-todomvc-redux --command test
          timeout: '3 minutes'
      - set-failed-status
      - store-npm-logs

  realworld:
    <<: *defaults
    steps:
      - prepare
      - run:
          command: npm run test-if -- --repo cypress-example-conduit-app --command test
          timeout: '3 minutes'
      - set-failed-status
      - store-npm-logs

  phonecat:
    <<: *defaults
    steps:
      - prepare
      - run: npm run test-if -- --repo cypress-example-phonecat --command test:ci
        # store NPM logs in case there was a problem
      - set-failed-status
      - store-npm-logs

  piechopper:
    <<: *defaults
    steps:
      - prepare
      - run: npm run test-if -- --repo cypress-example-piechopper --command test:ci
        # store NPM logs in case there was a problem
      - set-failed-status
      - store-npm-logs

  # cypress-svelte-unit-test:
  #   <<: *defaults
  #   steps:
  #     - prepare
  #     - run: npm run test-if -- --repo bahmutov/cypress-svelte-unit-test --command test
  #       # store NPM logs in case there was a problem
  #     - set-failed-status
  #     - store-npm-logs

  # cypress-vue-unit-test:
  #   <<: *defaults
  #   steps:
  #     - prepare
  #     - run: npm run test-if -- --repo bahmutov/cypress-vue-unit-test --command test
  #       # store NPM logs in case there was a problem
  #     - set-failed-status
  #     - store-npm-logs

  # cypress-react-unit-test:
  #   <<: *defaults
  #   steps:
  #     - prepare
  #     - run: npm run test-if -- --repo bahmutov/cypress-react-unit-test --command test
  #       # store NPM logs in case there was a problem
  #     - set-failed-status
  #     - store-npm-logs

  workshop:
    <<: *defaults
    steps:
      - prepare
      - run:
          command: npm run test-if -- --repo testing-workshop-cypress --command ci
          timeout: '5 minutes'
      - set-failed-status
      - store_artifacts:
          path: testing-workshop-cypress/cypress/screenshots
      - store_artifacts:
          path: testing-workshop-cypress/cypress/videos
      - store-npm-logs

  cypress-example-reporters-mochawesome:
    <<: *defaults
    steps:
      - prepare
      - run:
          command: npm run test-if -- --repo cypress-example-reporters --command test:mochawesome
          timeout: '3 minutes'
      - set-failed-status
      - store-npm-logs

  cypress-example-reporters-junit:
        <<: *defaults
        steps:
          - prepare
          - run:
              command: npm run test-if -- --repo cypress-example-reporters --command test:junit
              timeout: '3 minutes'
          - set-failed-status
          - store-npm-logs

  after-tests:
    <<: *defaults
    steps:
      - checkout
      # stop running this job if testing Mac or Windows commit
      - early-stop:
          substring: Testing new darwin
      - early-stop:
          substring: Testing new win32
      # we only need a single NPM package for status check
      - install-tools
      - set-passed-status

  after-tests-mac:
    working_directory: ~/app
    executor: mac
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - early-stop:
          substring: Testing new linux
      # we only need a single NPM package for status check
      - install-tools
      - set-passed-status

  after-tests-windows:
    executor: win
    steps:
      - checkout
      - early-stop:
          substring: Testing new linux
      - early-stop:
          substring: Testing new darwin
      # we only need a single NPM package for status check
      - install-tools
      - set-passed-status

# because each job needs to report its failure (if it really fails)
# as a GH commit status, then each job needs
# the status check security context with those environment variables
mac-workflow: &mac-workflow
  jobs:
    - kitchensink-mac:
        context: test-runner:commit-status-checks
    - todomvc-mac:
        context: test-runner:commit-status-checks
    - after-tests-mac:
        context: test-runner:commit-status-checks
        requires:
          - kitchensink-mac
          - todomvc-mac

win-workflow: &win-workflow
  jobs:
    - kitchensink-windows
    - kitchensink-windows-chrome
    - after-tests-windows:
        context: test-runner:commit-status-checks
        requires:
          - kitchensink-windows
          - kitchensink-windows-chrome

workflows:
  version: 2
  win-tests:
    <<: *win-workflow

  mac-tests:
    <<: *mac-workflow

  linux-tests:
    jobs:
      - lint
      - cypress-example-reporters-mochawesome:
          context: test-runner:commit-status-checks
      - cypress-example-reporters-junit:
          context: test-runner:commit-status-checks
      - kitchensink:
          context: test-runner:commit-status-checks
      - kitchensink-chrome:
          context: test-runner:commit-status-checks
      - recipes:
          context: test-runner:commit-status-checks
      - recipes-chrome:
          context: test-runner:commit-status-checks
      - todomvc:
          context: test-runner:commit-status-checks
      - todomvc-headed:
          context: test-runner:commit-status-checks
      - todomvc-chrome:
          context: test-runner:commit-status-checks
      - todomvc-redux:
          context: test-runner:commit-status-checks
      - realworld:
          context: test-runner:commit-status-checks
          # for now that repo requires Node 10 to run
          executor: node10
      - phonecat:
          context: test-runner:commit-status-checks
      - piechopper:
          context: test-runner:commit-status-checks
      # NOTE: skip for now, some failure due to rollup update
      # https://circleci.com/gh/cypress-io/cypress-test-example-repos/110563
      # - cypress-svelte-unit-test:
      #     context: test-runner:commit-status-checks
      # TODO: fix - extremely flaky in CI
      # - cypress-vue-unit-test:
      #     context: test-runner:commit-status-checks
      # TODO: fix - extremely flaky in CI
      # - cypress-react-unit-test:
      #     context: test-runner:commit-status-checks
      - workshop:
          context: test-runner:commit-status-checks
      # after all jobs finish successfully
      # we can set success commit status
      - after-tests:
          context: test-runner:commit-status-checks
          requires:
            - kitchensink
            - kitchensink-chrome
            - recipes
            - recipes-chrome
            - todomvc
            - todomvc-headed
            - todomvc-chrome
            - todomvc-redux
            - realworld
            - phonecat
            - piechopper
            # - cypress-svelte-unit-test
            # - cypress-vue-unit-test
            # - cypress-react-unit-test
            - workshop
            - cypress-example-reporters-mochawesome
            - cypress-example-reporters-junit
