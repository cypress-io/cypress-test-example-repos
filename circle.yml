version: 2.1

executors:
  mac:
    macos:
      xcode: "10.1.0"
    environment:
      TERM: "xterm"

commands:
  set-failed-status:
    description: |
      Sets commit status to failures if necessary
      for the original Test Runner commit.
    steps:
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  set-passed-status:
    description: |
      Sets commit status to success if necessary
      for the original Test Runner commit.
    steps:
      - run:
          when: on_success
          name: Set status check
          command: $(npm bin)/set-status --state success --description "on CircleCI"

  early-stop:
    description: |
      Early halt if this commit is for testing binaries for different platform
      Place this command AFTER checkout command because we need to look
      at the commit subject text
    parameters:
      substring:
        type: string
        description: String to search for in the commit subject to skip build
    steps:
      - run:
          name: Checking OS platform for "<< parameters.substring >>"
          command: |
            subject=$(git show -s --pretty=%s)
            echo "Commit subject: $subject"

            if [[ $subject == *"<< parameters.substring >>"* ]]; then
              echo Skipping testing binary ‚è≠
              echo Found string "<< parameters.substring >>"
              circleci step halt
            fi

defaults: &defaults
  parallelism: 1
  working_directory: ~/app
  docker:
    - image: cypress/browsers:chrome69

jobs:
  lint:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-group
      - run: node --version
      - run: npm --version
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-group-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run lint

  kitchensink-mac:
    working_directory: ~/app
    executor: mac
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - early-stop:
          substring: Testing new linux
      - restore_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          command: npm run test-if -- --repo cypress-example-kitchensink
          timeout: '3 minutes'
      - set-failed-status
      - store_artifacts:
          path: cypress-example-kitchensink/cypress/screenshots
      - store_artifacts:
          path: cypress-example-kitchensink/cypress/videos
        # store NPM logs in case there was a problem
      - store_artifacts:
          path: ~/.npm/_logs

  kitchensink:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          command: npm run test-if -- --repo cypress-example-kitchensink
          timeout: '3 minutes'
      - set-failed-status
      - store_artifacts:
          path: cypress-example-kitchensink/cypress/screenshots
      - store_artifacts:
          path: cypress-example-kitchensink/cypress/videos
        # store NPM logs in case there was a problem
      - store_artifacts:
          path: ~/.npm/_logs

  "kitchensink-chrome":
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          command: npm run test-if -- --repo cypress-example-kitchensink --command test:ci:chrome
          timeout: '3 minutes'
      - set-failed-status
      - store_artifacts:
          path: cypress-example-kitchensink/cypress/screenshots
      - store_artifacts:
          path: cypress-example-kitchensink/cypress/videos
        # store NPM logs in case there was a problem
      - store_artifacts:
          path: ~/.npm/_logs

  recipes:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run test-if -- --repo cypress-example-recipes --command test:ci
      - set-failed-status
      - store_artifacts:
          path: cypress-example-recipes/cypress/screenshots
      - store_artifacts:
          path: cypress-example-recipes/cypress/videos
      - store_artifacts:
          # store NPM logs in case there was a problem
          path: ~/.npm/_logs

  recipes-chrome:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run test-if -- --repo cypress-example-recipes --command test:ci:chrome
      - set-failed-status
      - store_artifacts:
          path: cypress-example-kitchensink/cypress/screenshots
      - store_artifacts:
          path: cypress-example-kitchensink/cypress/videos
      - store_artifacts:
          # store NPM logs in case there was a problem
          path: ~/.npm/_logs

  todomvc-mac:
    working_directory: ~/app
    executor: mac
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - early-stop:
          substring: Testing new linux
      - restore_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          command: npm run test-if -- --repo cypress-example-todomvc --command test:ci:record
          timeout: '3 minutes'
      - set-failed-status
      # store NPM logs in case there was a problem
      - store_artifacts:
          path: ~/.npm/_logs

  todomvc:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          command: npm run test-if -- --repo cypress-example-todomvc --command test:ci:record
          timeout: '3 minutes'
      - set-failed-status
      # store NPM logs in case there was a problem
      - store_artifacts:
          path: ~/.npm/_logs

  todomvc-headed:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          command: npm run test-if -- --repo cypress-example-todomvc --command test:ci:headed
          timeout: '3 minutes'
        # store NPM logs in case there was a problem
      - set-failed-status
      - store_artifacts:
          path: ~/.npm/_logs

  todomvc-chrome:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          command: npm run test-if -- --repo cypress-example-todomvc --command test:ci:chrome
          timeout: '3 minutes'
        # store NPM logs in case there was a problem
      - set-failed-status
      - store_artifacts:
          path: ~/.npm/_logs

  phonecat:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run test-if -- --repo cypress-example-phonecat --command test:ci
        # store NPM logs in case there was a problem
      - set-failed-status
      - store_artifacts:
          path: ~/.npm/_logs

  piechopper:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run test-if -- --repo cypress-example-piechopper --command test:ci
        # store NPM logs in case there was a problem
      - set-failed-status
      - store_artifacts:
          path: ~/.npm/_logs

  cypress-svelte-unit-test:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run test-if -- --repo bahmutov/cypress-svelte-unit-test --command test
        # store NPM logs in case there was a problem
      - set-failed-status
      - store_artifacts:
          path: ~/.npm/_logs

  cypress-vue-unit-test:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run test-if -- --repo bahmutov/cypress-vue-unit-test --command test
        # store NPM logs in case there was a problem
      - set-failed-status
      - store_artifacts:
          path: ~/.npm/_logs

  cypress-react-unit-test:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run test-if -- --repo bahmutov/cypress-react-unit-test --command test
        # store NPM logs in case there was a problem
      - set-failed-status
      - store_artifacts:
          path: ~/.npm/_logs

  cypress-hyperapp-unit-test:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run test-if -- --repo bahmutov/cypress-hyperapp-unit-test --command test:ci
        # store NPM logs in case there was a problem
      - set-failed-status
      - store_artifacts:
          path: ~/.npm/_logs

  cypress-cycle-unit-test:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run test-if -- --repo bahmutov/cypress-cycle-unit-test --command test
        # store NPM logs in case there was a problem
      - set-failed-status
      - store_artifacts:
          path: ~/.npm/_logs

  workshop:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - restore_cache:
          key: root-deps
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - save_cache:
          key: root-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          command: npm run test-if -- --repo testing-workshop-cypress --command ci
          timeout: '5 minutes'
      - set-failed-status
      - store_artifacts:
          path: testing-workshop-cypress/cypress/screenshots
      - store_artifacts:
          path: testing-workshop-cypress/cypress/videos
      - store_artifacts:
          # store NPM logs in case there was a problem
          path: ~/.npm/_logs

  after-tests:
    <<: *defaults
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      # we only need a single NPM package for status check
      - run: npm install @cypress/commit-message-install
      - set-passed-status

  after-tests-mac:
    working_directory: ~/app
    executor: mac
    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - early-stop:
          substring: Testing new linux
      # we only need a single NPM package for status check
      - run: npm install @cypress/commit-message-install
      - set-passed-status

# because each job needs to report its failure (if it really fails)
# as a GH commit status, then each job needs
# the status check security context with those environment variables
workflows:
  version: 2
  mac-tests:
    jobs:
      - kitchensink-mac:
          context: test-runner:commit-status-checks
      - todomvc-mac:
          context: test-runner:commit-status-checks
      - after-tests-mac:
          context: test-runner:commit-status-checks
          requires:
            - kitchensink-mac
            - todomvc-mac

  linux-tests:
    jobs:
      - lint
      - kitchensink:
          context: test-runner:commit-status-checks
      - kitchensink-chrome:
          context: test-runner:commit-status-checks
      - recipes:
          context: test-runner:commit-status-checks
      - recipes-chrome:
          context: test-runner:commit-status-checks
      - todomvc:
          context: test-runner:commit-status-checks
      - todomvc-headed:
          context: test-runner:commit-status-checks
      - todomvc-chrome:
          context: test-runner:commit-status-checks
      - phonecat:
          context: test-runner:commit-status-checks
      - piechopper:
          context: test-runner:commit-status-checks
      - cypress-svelte-unit-test:
          context: test-runner:commit-status-checks
      - cypress-vue-unit-test:
          context: test-runner:commit-status-checks
      - cypress-react-unit-test:
          context: test-runner:commit-status-checks
      - cypress-hyperapp-unit-test:
          context: test-runner:commit-status-checks
      - cypress-cycle-unit-test:
          context: test-runner:commit-status-checks
      - workshop:
          context: test-runner:commit-status-checks
      # after all jobs finish successfully
      # we can set success commit status
      - after-tests:
          context: test-runner:commit-status-checks
          requires:
            - kitchensink
            - kitchensink-chrome
            - recipes
            - recipes-chrome
            - todomvc
            - todomvc-headed
            - todomvc-chrome
            - phonecat
            - piechopper
            - cypress-svelte-unit-test
            - cypress-vue-unit-test
            - cypress-react-unit-test
            - cypress-hyperapp-unit-test
            - cypress-cycle-unit-test
            - workshop
